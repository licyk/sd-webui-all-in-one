name: Build SD-Trainer

on:
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - ".github/workflows/build_sd_trainer.yml"
  # delete:
  # create:
  schedule:
  # * is a special character in YAML so you have to quote this string
  # UTC 17:00 -> CST (China) 1:00, see https://datetime360.com/cn/utc-cst-china-time/
  # https://docs.github.com/zh/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#schedule
  - cron: '30 17 * * 0'
  workflow_dispatch:

jobs:
  Build-SD-Trainer:
    name: Build SD-Trainer
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: List files in the repository
        shell: pwsh
        run: |
          Get-ChildItem -Path "${{ github.workspace }}" -Recurse

      - name: Launch SD-Trainer Installer
        shell: pwsh
        run: |
          & "${{ github.workspace }}/sd_trainer_installer.ps1" `
            -InstallPath "${{ github.workspace }}/sd_trainer" `
            -PyTorchMirrorType cu128 `
            -BuildMode `
            -BuildWithLaunch `
            -InstallBranch "sd_trainer" `
            -DisablePyPIMirror `
            -DisableGithubMirror `
            -InstallHanamizuki `
            -DisableHuggingFaceMirror

      - name: Make docs
        shell: pwsh
        run: |
          python "${{ github.workspace }}/.github/make_docs.py" "${{ github.workspace }}/sd_trainer"

      - name: Clean cache dir
        shell: pwsh
        run: |
          Remove-Item -Path "${{ github.workspace }}/sd_trainer/cache" -Force -Recurse

      - name: Archive
        shell: pwsh
        run: |
          & "${{ github.workspace }}/.github/archive_portable.ps1" `
            -SoftwareName "sd_trainer" `
            -Workspace "${{ github.workspace }}" `
            -Source "${{ github.workspace }}/sd_trainer" `
            -SaveDst "${{ github.workspace }}/sdnote/portable/nightly" `
            -Author "licyk"

      - name: Install HuggingFace and ModelScope library
        shell: pwsh
        env:
          UV_SYSTEM_PYTHON: 1
          UV_LINK_MODE: copy
        run: |
          uv pip install huggingface_hub modelscope

      - name: Upload to HuggingFace repo
        shell: pwsh
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          WORKSPACE: ${{ github.workspace }}
        run: |
          python "${{ github.workspace }}/.github/huggingface_release.py"

      - name: Upload to ModelScope repo
        shell: pwsh
        env:
          MODELSCOPE_API_TOKEN: ${{ secrets.MODELSCOPE_API_TOKEN }}
          WORKSPACE: ${{ github.workspace }}
        run: |
          python "${{ github.workspace }}/.github/modelscope_release.py"
